{% extends "@stable/views/views-view-unformatted.html.twig" %}
{#
/**
 * @file
 * Default theme implementation for an unformatted view display.
 *
 * If the display is configured to use Display Suite's alternating view modes,
 * column classes are added appropriate to the view modes.
 *
 * @see http://bulma.io/documentation/columns/basics
 *
 * @ingroup themeable
 */
#}
{# Default to full width. #}
{%
  set view_modes = {
    '__default': {
      'row_classes': [
        'column',
        'is-12',
      ],
      'is_grouped': false,
      'group_limit': null,
    },
    'box': {
      'row_classes': [
        'column',
        'is-12-tablet',
        'is-one-quarter-desktop',
        'is-one-quarter-widescreen',
      ],
      'is_grouped': false,
      'group_limit': null,
    },
    'card': {
      'row_classes': [
        'column',
        'is-12-tablet',
        'is-half-desktop',
        'is-one-quarter-widescreen',
        'is-full-height',
      ],
      'is_grouped': false,
      'group_limit': null,
    },
    'media': {
      'row_classes': [
        'column',
        'is-12-tablet',
        'is-half-desktop',
        'is-half-widescreen',
      ],
      'is_grouped': true,
      'group_limit': 4,
    },
    'teaser': {
      'row_classes': [
        'column',
        'is-12-tablet',
        'is-12-desktop',
        'is-9-widescreen',
      ],
      'is_grouped': false,
      'group_limit': null,
    },
  }
%}
{% set display = view.getDisplay().getPluginId() %}
{% set view_mode = view.rowPlugin.options['view_mode'] ?? false %}
{# Only apply to page displays with a selected view mode. #}
{% if (display == 'page') and view_mode %}
  {# Determine if we use the alternating view modes. #}
  {% set ds_alternating = (view.rowPlugin.options['alternating_fieldset']['alternating'] ?? false) %}
  {% set ds_allpages = (view.rowPlugin.options['alternating_fieldset']['allpages'] ?? false) %}
  {% set is_paged = view.getCurrentPage() ? true : false %}
  {% set use_alternating_view_mode = (ds_alternating and not (ds_allpages and is_paged)) %}
  {% set parent_row = null %}
  {% set consecutive_count = 0 %}
  {% set previous_view_mode = null %}
  {% set grouped_rows = {} %}
  {% for index, row in rows %}
    {% if use_alternating_view_mode %}
      {% set view_mode = (view.rowPlugin.options['alternating_fieldset']['item_' ~ loop.index0] ?? view_mode) %}
    {% endif %}
    {#
      Add the previously set parent_row if:
      - we've switched view modes or
      - we've reached the group_limit.
    #}
    {% set group_limit = view_modes[previous_view_mode]['group_limit'] ?? null %}
    {% set row_classes = view_modes[view_mode]['row_classes'] ?? [] %}
    {% if parent_row and ((view_mode != previous_view_mode) or (group_limit and (group_limit == consecutive_count)))%}
      {% if consecutive_count > 1 %}
        {% set parent_row = parent_row|merge({ 'attributes': parent_row.attributes.addClass('has-grouped-items') }) %}
      {% endif %}
      {% set grouped_rows = grouped_rows|merge([parent_row]) %}
      {% set parent_row = null %}
      {% set consecutive_count = 0 %}
    {% endif %}
    {% set is_grouped = view_modes[view_mode]['is_grouped'] ?? false %}
    {% if is_grouped %}
      {% if consecutive_count == 0 %}
        {%
          set parent_row = {
            'content': [row.content],
            'attributes': row.attributes.addClass(row_classes),
          }
        %}
        {% set consecutive_count = 1 %}
      {% else %}
        {% set parent_row = parent_row|merge({ 'content': parent_row.content|merge([row.content]) }) %}
        {% if previous_view_mode == view_mode %}
          {% set consecutive_count = (consecutive_count + 1) %}
        {% endif %}
      {% endif %}
    {% else %}
      {% set row = row|merge({ 'attributes': row.attributes.addClass(row_classes) }) %}
      {% set grouped_rows = grouped_rows|merge([row]) %}
    {% endif %}
    {% set previous_view_mode = view_mode %}
  {% endfor %}
  {% set rows = grouped_rows %}
{% endif %}